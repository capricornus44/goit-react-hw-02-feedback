{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","css","infoBox","label","value","FeedbackOptions","options","onLeaveFeedback","feedbackSection","button","type","name","data-value","onClick","Section","title","children","section","Notification","message","notification","App","state","handlerFeedback","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Number","toFixed","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f1ccdec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Statistics_label__22k8_\",\"value\":\"Statistics_value__1W4hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2X38i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Kr7bd\",\"title\":\"Section_title__1W4r2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2RcrT\"};","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport css from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={css.infoBox}>\r\n    <p className={css.label}>\r\n      Good:\r\n      <span className={css.value}>{good}</span>\r\n    </p>\r\n\r\n    <p className={css.label}>\r\n      Neutral:\r\n      <span className={css.value}>{neutral}</span>\r\n    </p>\r\n\r\n    <p className={css.label}>\r\n      Bad:\r\n      <span className={css.value}>{bad}</span>\r\n    </p>\r\n\r\n    <p className={css.label}>\r\n      Total:\r\n      <span className={css.value}>{total}</span>\r\n    </p>\r\n\r\n    <p className={css.label}>\r\n      Positive feedback:\r\n      <span className={css.value}>{positivePercentage}%</span>\r\n    </p>\r\n  </div>\r\n)\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics\r\n","import PropTypes from \"prop-types\"\r\nimport css from \"./FeedbackOptions.module.css\"\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options\r\n  return (\r\n    <div className={css.feedbackSection}>\r\n      <button className={css.button} type=\"button\" name=\"good\" data-value={good} onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n\r\n      <button className={css.button} type=\"button\" name=\"neutral\" data-value={neutral} onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n\r\n      <button className={css.button} type=\"button\" name=\"bad\" data-value={bad} onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions\r\n","import PropTypes from \"prop-types\"\r\nimport css from \"./Section.module.css\"\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={css.section}>\r\n    <h2 className={css.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n)\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section\r\n","import PropTypes from \"prop-types\"\r\nimport css from \"./Notification.module.css\"\r\n\r\nconst Notification = ({ message }) => <p className={css.notification}>{message}</p>\r\n\r\nexport default Notification\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n","import React, { Component } from \"react\"\nimport Statistics from \"./components/Statistics\"\nimport FeedbackOptions from \"./components/FeedbackOptions\"\nimport Section from \"./components/Section\"\nimport Notification from \"./components/Notification\"\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  handlerFeedback = (event) => {\n    const { name } = event.target\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }))\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state\n    return good + neutral + bad\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state\n    return (good / this.countTotalFeedback()) * 100\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state\n    const total = Number(this.countTotalFeedback())\n    const positivePercentage = Number(this.countPositiveFeedbackPercentage().toFixed(0))\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.handlerFeedback} />\n        </Section>\n\n        {total < 1 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\n          </Section>\n        )}\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/global.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}